% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DOptimality.R
\name{DEfficiency}
\alias{DEfficiency}
\title{Calculate the D-Efficiency for Designs without hard to change factors}
\usage{
DEfficiency(doeDesign)
}
\arguments{
\item{doeDesign}{An object of class \code{\link{doeDesign-class}} for which the D-Efficiency should be calculated.}
}
\value{
A numeric representing the d-efficiency of the design on a range from 0 to 100.
}
\description{
D-Efficiency expresses the quality of a design in terms of D-Optimality as a percentage. 100% D-Efficiency is the
best possible design (in terms of D-Optimality) for a given model and a given number of runs. D-Efficiency is calculated
as \eqn{|(X'X)^{-1}|^{1/p}}.
}
\details{
Currently there is no implementation for split-plot-designs (or any design that uses a hard to change or semi hard to
change factor).
}
\examples{
doe <- GenerateNewDoeDesign(
 factors = list(
  new("doeFactor", name="X1"),
  new("doeFactor", name="X2")
 ),
 number.runs = as.integer(20),
 design.model = ~X1*X2,
 optimality.function=DOptimality,
 optimality.criterion = "D-Optimality",
 random.doe = TRUE
)

# Defficiency of the randon initial design
DEfficiency(doe)

# Defficiency of the optimized design
doe.dopt <- GenerateOptimalDesign(doe, 1, 10)
DEfficiency(doe.dopt[[1]])

}
